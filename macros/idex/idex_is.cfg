# WARNING: DO NOT EDIT THIS FILE
# To override settings from this file, you can copy and paste the relevant
# sections into your printer.cfg and change it there.

#####
# IS MACROS
####

[gcode_macro SHAPER_CALIBRATE]
rename_existing: SHAPER_CALIBRATE_ORG
gcode:
	RATOS_ECHO PREFIX="IDEX" MSG="SHAPER_CALIBRATE is useless on IDEX machines. Please use the GENERATE_SHAPER_GRAPHS macro and type the values into `variable_shaper_*_freq` and `variable_shaper_*_type manually`."

[gcode_macro GENERATE_SHAPER_GRAPHS]
description: Genarates input shaper resonances graphs for analysis. Uses the AXIS, TOOLHEAD, FREQUNECY_START and FREQUENCY_END parameter if you want to do specific measurements, (eg. GENERATE_SHAPER_GRAPHS AXIS=X TOOLHEAD=0 FREQUENCY_START=10 FREQUENCY_END=20)
gcode:
	# Handle toolhead settings
	CACHE_TOOLHEAD_SETTINGS KEY="generate_shaper_graphs"
	SET_MACRO_TRAVEL_SETTINGS

	# cache the current graph files
	CACHE_IS_GRAPH_FILES

	# parameters 
	{% set measure_t0 = true %}
	{% set measure_t1 = true %}
	{% if params.TOOLHEAD is defined %}
		{% if params.TOOLHEAD|lower == '0' %}
			{% set measure_t1 = false %}
		{% elif params.TOOLHEAD|lower == '1' %}
			{% set measure_t0 = false %}
		{% else %}
			{action_raise_error("Unknown toolhead specified. Expected 0 or 1 (left or right)")}
		{% endif %}
	{% endif %}
	{% set axis = params.AXIS|default('')|lower %}
	{% set freq_start = params.FREQUENCY_START|default(10)|int %}
	{% set freq_end = params.FREQUENCY_END|default(133)|int %}
	{% set hz_per_sec = params.HZ_PER_SEC|default(1)|float %}

	# config
	{% set idex_mode = printer["dual_carriage"].carriage_1|default('')|lower %}
	{% set act_t = 1 if idex_mode == 'primary' else 0 %}
	{% set speed = printer["gcode_macro RatOS"].toolchange_travel_speed|float * 60 %}
	{% set adxl_chip = printer["gcode_macro RatOS"].adxl_chip %}
	{% set probe_points = printer.configfile.settings.resonance_tester.probe_points[0] %}
	{% set default_toolhead = printer["gcode_macro RatOS"].default_toolhead|default(0)|int %}
	{% set printable_x_max = printer["gcode_macro RatOS"].printable_x_max|float %}
	{% set copy_mode_offset = printable_x_max / 4.0 %}
	{% set default_toolhead_parking_position = printer["gcode_macro T%s" % default_toolhead].parking_position|float %}

	# home toolheads
	MAYBE_HOME
	{% if idex_mode == 'copy' %}
		_IDEX_COPY DANCE=0
	{% elif idex_mode == 'mirror' %}
		_IDEX_MIRROR DANCE=0
	{% else %}
		_IDEX_SINGLE
	{% endif %}
	G90

	# visual feedback
	_LED_INPUT_SHAPER_START

	# input shaping
	{% if axis != '' %}
		{% if axis == 'x' %}
			{% if idex_mode == 'copy' or idex_mode == 'mirror' %}
				{% if idex_mode == 'copy' %}
					_IDEX_COPY DANCE=0
				{% elif idex_mode == 'mirror' %}
					_IDEX_MIRROR DANCE=0
				{% endif %}
				G1 X{probe_points[0]} Y{probe_points[1]} F{speed}
				{% if idex_mode == 'copy' %}
					{% if measure_t0 == true %}
						TEST_RESONANCES AXIS=X CHIPS={adxl_chip[0]} NAME=t0_copy FREQ_START={freq_start} FREQ_END={freq_end} HZ_PER_SEC={hz_per_sec} POINT={probe_points[0] - copy_mode_offset},{probe_points[1]},{probe_points[2]}
					{% endif %}
					{% if measure_t1 == true %}
						TEST_RESONANCES AXIS=X CHIPS={adxl_chip[1]} NAME=t1_copy FREQ_START={freq_start} FREQ_END={freq_end} HZ_PER_SEC={hz_per_sec} POINT={probe_points[0] - copy_mode_offset},{probe_points[1]},{probe_points[2]}
					{% endif %}
					{% if measure_t0 == true %}
						RUN_SHELL_COMMAND CMD=generate_shaper_graphs PARAMS="{"x 0 1 %s %s %s" % ('%0.3f'|format(probe_points[0] - copy_mode_offset), '%0.3f'|format(probe_points[1]), '%0.3f'|format(probe_points[2]))}"
					{% endif %}
					{% if measure_t1 == true %}
						RUN_SHELL_COMMAND CMD=generate_shaper_graphs PARAMS="{"x 1 1 %s %s %s" % ('%0.3f'|format(probe_points[0] - copy_mode_offset), '%0.3f'|format(probe_points[1]), '%0.3f'|format(probe_points[2]))}"
					{% endif %}
				{% elif idex_mode == 'mirror' %}
					{% if measure_t0 == true %}
						TEST_RESONANCES AXIS=X CHIPS={adxl_chip[0]} NAME=t0_mirror FREQ_START={freq_start} FREQ_END={freq_end} HZ_PER_SEC={hz_per_sec} POINT={probe_points[0] - copy_mode_offset},{probe_points[1]},{probe_points[2]}
					{% endif %}
					{% if measure_t1 == true %}
						TEST_RESONANCES AXIS=X CHIPS={adxl_chip[1]} NAME=t1_mirror FREQ_START={freq_start} FREQ_END={freq_end} HZ_PER_SEC={hz_per_sec} POINT={probe_points[0] - copy_mode_offset},{probe_points[1]},{probe_points[2]}
					{% endif %}
					{% if measure_t0 == true %}
						RUN_SHELL_COMMAND CMD=generate_shaper_graphs PARAMS="{"x 0 2 %s %s %s" % ('%0.3f'|format(probe_points[0] - copy_mode_offset), '%0.3f'|format(probe_points[1]), '%0.3f'|format(probe_points[2]))}"
					{% endif %}
					{% if measure_t1 == true %}
						RUN_SHELL_COMMAND CMD=generate_shaper_graphs PARAMS="{"x 1 2 %s %s %s" % ('%0.3f'|format(probe_points[0] - copy_mode_offset), '%0.3f'|format(probe_points[1]), '%0.3f'|format(probe_points[2]))}"
					{% endif %}
				{% endif %}
			{% else %}
				G1 X{probe_points[0]} Y{probe_points[1]} F{speed}
				{% if measure_t0 == true %}
					_SELECT_TOOL T=0 X={probe_points[0]} Y={probe_points[1]}
					TEST_RESONANCES AXIS=X CHIPS={adxl_chip[0]} NAME=t0 FREQ_START={freq_start} FREQ_END={freq_end} HZ_PER_SEC={hz_per_sec} POINT={probe_points[0]},{probe_points[1]},{probe_points[2]}
				{% endif %}
				{% if measure_t1 == true %}
					_SELECT_TOOL T=1 X={probe_points[0]} Y={probe_points[1]}
					TEST_RESONANCES AXIS=X CHIPS={adxl_chip[1]} NAME=t1 FREQ_START={freq_start} FREQ_END={freq_end} HZ_PER_SEC={hz_per_sec} POINT={probe_points[0]},{probe_points[1]},{probe_points[2]}
				{% endif %}
				G4 P5000
				{% if measure_t0 == true and measure_t1 == false %}
					RUN_SHELL_COMMAND CMD=generate_shaper_graphs PARAMS="{"x 0 0 %s %s %s" % ('%0.3f'|format(probe_points[0]), '%0.3f'|format(probe_points[1]), '%0.3f'|format(probe_points[2]))}"
				{% elif measure_t0 == false and measure_t1 == true %}
					RUN_SHELL_COMMAND CMD=generate_shaper_graphs PARAMS="{"x 1 0 %s %s %s" % ('%0.3f'|format(probe_points[0]), '%0.3f'|format(probe_points[1]), '%0.3f'|format(probe_points[2]))}"
				{% elif measure_t0 == true and measure_t1 == true %}
					RUN_SHELL_COMMAND CMD=generate_shaper_graphs PARAMS="{"x 2 0 %s %s %s" % ('%0.3f'|format(probe_points[0]), '%0.3f'|format(probe_points[1]), '%0.3f'|format(probe_points[2]))}"
				{% endif %}
			{% endif %}
			PARK_TOOLHEAD
		{% elif axis == 'y' %}
			{% if idex_mode == 'copy' or idex_mode == 'mirror' %}
				{% if idex_mode == 'copy' %}
					_IDEX_COPY DANCE=0
				{% elif idex_mode == 'mirror' %}
					_IDEX_MIRROR DANCE=0
				{% endif %}
				G1 X{probe_points[0]} Y{probe_points[1]} F{speed}
				{% if idex_mode == 'copy' %}
					{% if measure_t0 == true %}
						TEST_RESONANCES AXIS=Y CHIPS={adxl_chip[0]} NAME=t0_copy FREQ_START={freq_start} FREQ_END={freq_end} HZ_PER_SEC={hz_per_sec} POINT={probe_points[0] - copy_mode_offset},{probe_points[1]},{probe_points[2]}
					{% endif %}
					{% if measure_t1 == true %}
						TEST_RESONANCES AXIS=Y CHIPS={adxl_chip[1]} NAME=t1_copy FREQ_START={freq_start} FREQ_END={freq_end} HZ_PER_SEC={hz_per_sec} POINT={probe_points[0] - copy_mode_offset},{probe_points[1]},{probe_points[2]}
					{% endif %}
					{% if measure_t0 == true %}
						RUN_SHELL_COMMAND CMD=generate_shaper_graphs PARAMS="{"y 0 1 %s %s %s" % ('%0.3f'|format(probe_points[0] - copy_mode_offset), '%0.3f'|format(probe_points[1]), '%0.3f'|format(probe_points[2]))}"
					{% endif %}
					{% if measure_t1 == true %}
						RUN_SHELL_COMMAND CMD=generate_shaper_graphs PARAMS="{"y 1 1 %s %s %s" % ('%0.3f'|format(probe_points[0] - copy_mode_offset), '%0.3f'|format(probe_points[1]), '%0.3f'|format(probe_points[2]))}"
					{% endif %}
				{% elif idex_mode == 'mirror' %}
					{% if measure_t0 == true %}
						TEST_RESONANCES AXIS=Y CHIPS={adxl_chip[0]} NAME=t0_mirror FREQ_START={freq_start} FREQ_END={freq_end} HZ_PER_SEC={hz_per_sec} POINT={probe_points[0] - copy_mode_offset},{probe_points[1]},{probe_points[2]}
					{% endif %}
					{% if measure_t1 == true %}
						TEST_RESONANCES AXIS=Y CHIPS={adxl_chip[1]} NAME=t1_mirror FREQ_START={freq_start} FREQ_END={freq_end} HZ_PER_SEC={hz_per_sec} POINT={probe_points[0] - copy_mode_offset},{probe_points[1]},{probe_points[2]}
					{% endif %}
					{% if measure_t0 == true %}
						RUN_SHELL_COMMAND CMD=generate_shaper_graphs PARAMS="{"y 0 2 %s %s %s" % ('%0.3f'|format(probe_points[0] - copy_mode_offset), '%0.3f'|format(probe_points[1]), '%0.3f'|format(probe_points[2]))}"
					{% endif %}
					{% if measure_t1 == true %}
						RUN_SHELL_COMMAND CMD=generate_shaper_graphs PARAMS="{"y 1 2 %s %s %s" % ('%0.3f'|format(probe_points[0] - copy_mode_offset), '%0.3f'|format(probe_points[1]), '%0.3f'|format(probe_points[2]))}"
					{% endif %}
				{% endif %}
			{% else %}
				G1 X{probe_points[0]} Y{probe_points[1]} F{speed}
				{% if measure_t0 == true %}
					_SELECT_TOOL T=0 X={probe_points[0]} Y={probe_points[1]}
					TEST_RESONANCES AXIS=Y CHIPS={adxl_chip[0]} NAME=t0 FREQ_START={freq_start} FREQ_END={freq_end} HZ_PER_SEC={hz_per_sec} POINT={probe_points[0]},{probe_points[1]},{probe_points[2]}
				{% endif %}
				{% if measure_t1 == true %}
					_SELECT_TOOL T=1 X={probe_points[0]} Y={probe_points[1]}
					TEST_RESONANCES AXIS=Y CHIPS={adxl_chip[1]} NAME=t1 FREQ_START={freq_start} FREQ_END={freq_end} HZ_PER_SEC={hz_per_sec} POINT={probe_points[0]},{probe_points[1]},{probe_points[2]}
				{% endif %}
				G4 P5000
				{% if measure_t0 == true and measure_t1 == false %}
					RUN_SHELL_COMMAND CMD=generate_shaper_graphs PARAMS="{"y 0 0 %s %s %s" % ('%0.3f'|format(probe_points[0]), '%0.3f'|format(probe_points[1]), '%0.3f'|format(probe_points[2]))}"
				{% elif measure_t0 == false and measure_t1 == true %}
					RUN_SHELL_COMMAND CMD=generate_shaper_graphs PARAMS="{"y 1 0 %s %s %s" % ('%0.3f'|format(probe_points[0]), '%0.3f'|format(probe_points[1]), '%0.3f'|format(probe_points[2]))}"
				{% elif measure_t0 == true and measure_t1 == true %}
					RUN_SHELL_COMMAND CMD=generate_shaper_graphs PARAMS="{"y 2 0 %s %s %s" % ('%0.3f'|format(probe_points[0]), '%0.3f'|format(probe_points[1]), '%0.3f'|format(probe_points[2]))}"
				{% endif %}
			{% endif %}
			PARK_TOOLHEAD
		{% else %}
			{action_raise_error("Unknown axis specified. Expected X or Y.")}
		{% endif %}
	{% else %}
		{% if idex_mode == 'copy' or idex_mode == 'mirror' %}
			{% if idex_mode == 'copy' %}
				_IDEX_COPY DANCE=0
			{% elif idex_mode == 'mirror' %}
				_IDEX_MIRROR DANCE=0
			{% endif %}
			G1 X{probe_points[0]} Y{probe_points[1]} F{speed}
			{% if idex_mode == 'copy' %}
				{% if measure_t0 == true %}
					TEST_RESONANCES AXIS=X CHIPS={adxl_chip[0]} NAME=t0_copy FREQ_START={freq_start} FREQ_END={freq_end} HZ_PER_SEC={hz_per_sec} POINT={probe_points[0] - copy_mode_offset},{probe_points[1]},{probe_points[2]}
					TEST_RESONANCES AXIS=Y CHIPS={adxl_chip[0]} NAME=t0_copy FREQ_START={freq_start} FREQ_END={freq_end} HZ_PER_SEC={hz_per_sec} POINT={probe_points[0] - copy_mode_offset},{probe_points[1]},{probe_points[2]}
				{% endif %}
				{% if measure_t1 == true %}
					TEST_RESONANCES AXIS=X CHIPS={adxl_chip[1]} NAME=t1_copy FREQ_START={freq_start} FREQ_END={freq_end} HZ_PER_SEC={hz_per_sec} POINT={probe_points[0] - copy_mode_offset},{probe_points[1]},{probe_points[2]}
					TEST_RESONANCES AXIS=Y CHIPS={adxl_chip[1]} NAME=t1_copy FREQ_START={freq_start} FREQ_END={freq_end} HZ_PER_SEC={hz_per_sec} POINT={probe_points[0] - copy_mode_offset},{probe_points[1]},{probe_points[2]}
				{% endif %}
				{% if measure_t0 == true %}
					RUN_SHELL_COMMAND CMD=generate_shaper_graphs PARAMS="{"x 0 1 %s %s %s" % ('%0.3f'|format(probe_points[0] - copy_mode_offset), '%0.3f'|format(probe_points[1]), '%0.3f'|format(probe_points[2]))}"
					RUN_SHELL_COMMAND CMD=generate_shaper_graphs PARAMS="{"y 0 1 %s %s %s" % ('%0.3f'|format(probe_points[0] - copy_mode_offset), '%0.3f'|format(probe_points[1]), '%0.3f'|format(probe_points[2]))}"
				{% endif %}
				{% if measure_t1 == true %}
					RUN_SHELL_COMMAND CMD=generate_shaper_graphs PARAMS="{"x 1 1 %s %s %s" % ('%0.3f'|format(probe_points[0] - copy_mode_offset), '%0.3f'|format(probe_points[1]), '%0.3f'|format(probe_points[2]))}"
					RUN_SHELL_COMMAND CMD=generate_shaper_graphs PARAMS="{"y 1 1 %s %s %s" % ('%0.3f'|format(probe_points[0] - copy_mode_offset), '%0.3f'|format(probe_points[1]), '%0.3f'|format(probe_points[2]))}"
				{% endif %}
			{% elif idex_mode == 'mirror' %}
				{% if measure_t0 == true %}
					TEST_RESONANCES AXIS=X CHIPS={adxl_chip[0]} NAME=t0_mirror FREQ_START={freq_start} FREQ_END={freq_end} HZ_PER_SEC={hz_per_sec} POINT={probe_points[0] - copy_mode_offset},{probe_points[1]},{probe_points[2]}
					TEST_RESONANCES AXIS=Y CHIPS={adxl_chip[0]} NAME=t0_mirror FREQ_START={freq_start} FREQ_END={freq_end} HZ_PER_SEC={hz_per_sec} POINT={probe_points[0] - copy_mode_offset},{probe_points[1]},{probe_points[2]}
				{% endif %}
				{% if measure_t1 == true %}
					TEST_RESONANCES AXIS=X CHIPS={adxl_chip[1]} NAME=t1_mirror FREQ_START={freq_start} FREQ_END={freq_end} HZ_PER_SEC={hz_per_sec} POINT={probe_points[0] - copy_mode_offset},{probe_points[1]},{probe_points[2]}
					TEST_RESONANCES AXIS=Y CHIPS={adxl_chip[1]} NAME=t1_mirror FREQ_START={freq_start} FREQ_END={freq_end} HZ_PER_SEC={hz_per_sec} POINT={probe_points[0] - copy_mode_offset},{probe_points[1]},{probe_points[2]}
				{% endif %}
				{% if measure_t0 == true %}
					RUN_SHELL_COMMAND CMD=generate_shaper_graphs PARAMS="{"x 0 2 %s %s %s" % ('%0.3f'|format(probe_points[0] - copy_mode_offset), '%0.3f'|format(probe_points[1]), '%0.3f'|format(probe_points[2]))}"
					RUN_SHELL_COMMAND CMD=generate_shaper_graphs PARAMS="{"y 0 2 %s %s %s" % ('%0.3f'|format(probe_points[0] - copy_mode_offset), '%0.3f'|format(probe_points[1]), '%0.3f'|format(probe_points[2]))}"
				{% endif %}
				{% if measure_t1 == true %}
					RUN_SHELL_COMMAND CMD=generate_shaper_graphs PARAMS="{"x 1 2 %s %s %s" % ('%0.3f'|format(probe_points[0] - copy_mode_offset), '%0.3f'|format(probe_points[1]), '%0.3f'|format(probe_points[2]))}"
					RUN_SHELL_COMMAND CMD=generate_shaper_graphs PARAMS="{"y 1 2 %s %s %s" % ('%0.3f'|format(probe_points[0] - copy_mode_offset), '%0.3f'|format(probe_points[1]), '%0.3f'|format(probe_points[2]))}"
				{% endif %}
			{% endif %}
		{% else %}
			G1 X{probe_points[0]} Y{probe_points[1]} F{speed}
			{% if measure_t0 == true %}
				_SELECT_TOOL T=0 X={probe_points[0]} Y={probe_points[1]} 
				TEST_RESONANCES AXIS=X CHIPS={adxl_chip[0]} NAME=t0 FREQ_START={freq_start} FREQ_END={freq_end} HZ_PER_SEC={hz_per_sec} POINT={probe_points[0]},{probe_points[1]},{probe_points[2]}
				TEST_RESONANCES AXIS=Y CHIPS={adxl_chip[0]} NAME=t0 FREQ_START={freq_start} FREQ_END={freq_end} HZ_PER_SEC={hz_per_sec} POINT={probe_points[0]},{probe_points[1]},{probe_points[2]}
			{% endif %}
			{% if measure_t1 == true %}
				_SELECT_TOOL T=1 X={probe_points[0]} Y={probe_points[1]}
				TEST_RESONANCES AXIS=X CHIPS={adxl_chip[1]} NAME=t1 FREQ_START={freq_start} FREQ_END={freq_end} HZ_PER_SEC={hz_per_sec} POINT={probe_points[0]},{probe_points[1]},{probe_points[2]}
				TEST_RESONANCES AXIS=Y CHIPS={adxl_chip[1]} NAME=t1 FREQ_START={freq_start} FREQ_END={freq_end} HZ_PER_SEC={hz_per_sec} POINT={probe_points[0]},{probe_points[1]},{probe_points[2]}
			{% endif %}
			G4 P5000
			{% if measure_t0 == true and measure_t1 == false %}
				RUN_SHELL_COMMAND CMD=generate_shaper_graphs PARAMS="{"x 0 0 %s %s %s" % ('%0.3f'|format(probe_points[0]), '%0.3f'|format(probe_points[1]), '%0.3f'|format(probe_points[2]))}"
				RUN_SHELL_COMMAND CMD=generate_shaper_graphs PARAMS="{"y 0 0 %s %s %s" % ('%0.3f'|format(probe_points[0]), '%0.3f'|format(probe_points[1]), '%0.3f'|format(probe_points[2]))}"
			{% elif measure_t0 == false and measure_t1 == true %}
				RUN_SHELL_COMMAND CMD=generate_shaper_graphs PARAMS="{"x 1 0 %s %s %s" % ('%0.3f'|format(probe_points[0]), '%0.3f'|format(probe_points[1]), '%0.3f'|format(probe_points[2]))}"
				RUN_SHELL_COMMAND CMD=generate_shaper_graphs PARAMS="{"y 1 0 %s %s %s" % ('%0.3f'|format(probe_points[0]), '%0.3f'|format(probe_points[1]), '%0.3f'|format(probe_points[2]))}"
			{% elif measure_t0 == true and measure_t1 == true %}
				RUN_SHELL_COMMAND CMD=generate_shaper_graphs PARAMS="{"x 2 0 %s %s %s" % ('%0.3f'|format(probe_points[0]), '%0.3f'|format(probe_points[1]), '%0.3f'|format(probe_points[2]))}"
				RUN_SHELL_COMMAND CMD=generate_shaper_graphs PARAMS="{"y 2 0 %s %s %s" % ('%0.3f'|format(probe_points[0]), '%0.3f'|format(probe_points[1]), '%0.3f'|format(probe_points[2]))}"
			{% endif %}
		{% endif %}
		PARK_TOOLHEAD
	{% endif %}

	# Handle toolhead settings
	RESTORE_TOOLHEAD_SETTINGS KEY="generate_shaper_graphs"

	# activate default toolhead and move to parking position 
	{% if idex_mode != 'copy' and idex_mode != 'mirror' %}
		_IDEX_SINGLE X={default_toolhead_parking_position} INIT=1
	{% endif %}

	# visual feedback
	_LED_INPUT_SHAPER_END

	# show documentation link
	_LEARN_MORE_CALIBRATION

	# show the last generated graphs
	SHOW_IS_GRAPH_FILES TITLE="Shaper graph"


[gcode_shell_command generate_shaper_graphs]
command: /home/pi/printer_data/config/RatOS/scripts/idex-generate-shaper-graph.sh
timeout: 120.
verbose: True


[gcode_macro MEASURE_COREXY_BELT_TENSION]
description: Generates resonance graph used to ensure belts are equally tensioned. Uses the AXIS, TOOLHEAD, FREQUNECY_START and FREQUENCY_END parameter if you want to do specific measurements, (eg. GENERATE_SHAPER_GRAPHS AXIS=X TOOLHEAD=0 FREQUENCY_START=10 FREQUENCY_END=20)
gcode:
	# Handle toolhead settings
	CACHE_TOOLHEAD_SETTINGS KEY="measure_corexy_belt_tension"
	SET_MACRO_TRAVEL_SETTINGS

	# cache the current graph files
	CACHE_IS_GRAPH_FILES

	# parameters 
	{% set measure_t0 = true %}
	{% set measure_t1 = true %}
	{% if params.TOOLHEAD is defined %}
		{% if params.TOOLHEAD|lower == '0' %}
			{% set measure_t1 = false %}
		{% elif params.TOOLHEAD|lower == '1' %}
			{% set measure_t0 = false %}
		{% else %}
			{action_raise_error("Unknown toolhead specified. Expected 0 or 1 (left or right)")}
		{% endif %}
	{% endif %}
	{% set axis = params.AXIS|default('')|lower %}
	{% set freq_start = params.FREQUENCY_START|default(10)|int %}
	{% set freq_end = params.FREQUENCY_END|default(133)|int %}

	# config
	{% set idex_mode = printer["dual_carriage"].carriage_1|default('')|lower %}
	{% set speed = printer["gcode_macro RatOS"].toolchange_travel_speed|float * 60 %}
	{% set parking_position_t1 = printer["gcode_macro T1"].parking_position|float %}
	{% set adxl_chip = printer["gcode_macro RatOS"].adxl_chip %}
	{% set probe_points = printer.configfile.settings.resonance_tester.probe_points[0] %}
	{% set default_toolhead = printer["gcode_macro RatOS"].default_toolhead|default(0)|int %}
	{% set default_toolhead_parking_position = printer["gcode_macro T%s" % default_toolhead].parking_position|float %}

	# home toolheads
	MAYBE_HOME
	_IDEX_SINGLE
	G90

	# visual feedback
	_LED_INPUT_SHAPER_START

	{% if axis != '' %}
		{% if axis == 'x' %}
			{% if measure_t1 == true %}
				_SELECT_TOOL T=1 X={probe_points[0]} Y={probe_points[1]} 
				TEST_RESONANCES AXIS=X CHIPS={adxl_chip[1]} OUTPUT=raw_data NAME=t1 FREQ_START={freq_start} FREQ_END={freq_end} POINT={probe_points[0]},{probe_points[1]},{probe_points[2]}
			{% endif %}
			{% if measure_t0 == true %}
				_SELECT_TOOL T=0 X={probe_points[0]} Y={probe_points[1]}
				TEST_RESONANCES AXIS=X CHIPS={adxl_chip[0]} OUTPUT=raw_data NAME=t0 FREQ_START={freq_start} FREQ_END={freq_end} POINT={probe_points[0]},{probe_points[1]},{probe_points[2]}
			{% endif %}
			G4 P5000
			{% if measure_t1 == true and measure_t0 == false %}
				RUN_SHELL_COMMAND CMD=generate_tension_graphs PARAMS="x 1"
			{% elif measure_t1 == false and measure_t0 == true %}
				RUN_SHELL_COMMAND CMD=generate_tension_graphs PARAMS="x 0"
			{% elif measure_t1 == true and measure_t0 == true %}
				RUN_SHELL_COMMAND CMD=generate_tension_graphs PARAMS=x
			{% endif %}
			PARK_TOOLHEAD
		{% elif axis == 'y' %}
			{% if measure_t1 == false or measure_t0 == false %}
				{action_raise_error("Axis specified. Not supported for belt tension on Y.")}
			{% else %}
				_SELECT_TOOL T=1 X={parking_position_t1} Y={probe_points[1]}
				TEST_RESONANCES AXIS=Y CHIPS={adxl_chip[1]},{adxl_chip[0]} OUTPUT=raw_data NAME=t2 POINT={parking_position_t1},{probe_points[1]},{probe_points[2]} FREQ_START={freq_start} FREQ_END={freq_end}
				G4 P5000
				RUN_SHELL_COMMAND CMD=generate_tension_graphs PARAMS="y 2"
				PARK_TOOLHEAD
			{% endif %}
		{% else %}
				{action_raise_error("Unknown axis specified. Expected X or Y.")}
		{% endif %}
	{% else %}
		{% if measure_t1 == true %}
			_SELECT_TOOL T=1 X={probe_points[0]} Y={probe_points[1]}
			TEST_RESONANCES AXIS=X CHIPS={adxl_chip[1]} OUTPUT=raw_data NAME=t1 FREQ_START={freq_start} FREQ_END={freq_end} POINT={probe_points[0]},{probe_points[1]},{probe_points[2]}
		{% endif %}
		{% if measure_t0 == true %}
			_SELECT_TOOL T=0 X={probe_points[0]} Y={probe_points[1]}
			TEST_RESONANCES AXIS=X CHIPS={adxl_chip[0]} OUTPUT=raw_data NAME=t0 FREQ_START={freq_start} FREQ_END={freq_end} POINT={probe_points[0]},{probe_points[1]},{probe_points[2]}
		{% endif %}
		{% if params.TOOLHEAD is not defined %}
			_SELECT_TOOL T=1 X={parking_position_t1} Y={probe_points[1]}
			G1 X{parking_position_t1} F{speed}
			TEST_RESONANCES AXIS=Y CHIPS={adxl_chip[1]},{adxl_chip[0]} OUTPUT=raw_data NAME=t2 POINT={parking_position_t1},{probe_points[1]},{probe_points[2]} FREQ_START={freq_start} FREQ_END={freq_end}
		{% endif %}
		G4 P5000
		{% if measure_t1 == true and measure_t0 == false %}
			RUN_SHELL_COMMAND CMD=generate_tension_graphs PARAMS="x 1"
		{% elif measure_t1 == false and measure_t0 == true %}
			RUN_SHELL_COMMAND CMD=generate_tension_graphs PARAMS="x 0"
		{% elif measure_t1 == true and measure_t0 == true %}
			RUN_SHELL_COMMAND CMD=generate_tension_graphs PARAMS=x
		{% endif %}
		{% if params.TOOLHEAD is not defined %}
			RUN_SHELL_COMMAND CMD=generate_tension_graphs PARAMS="y 2"
		{% endif %}
		PARK_TOOLHEAD
	{% endif %}

	# Handle toolhead settings
	RESTORE_TOOLHEAD_SETTINGS KEY="measure_corexy_belt_tension"

	# activate default toolhead and move to parking position 
	_IDEX_SINGLE X={default_toolhead_parking_position} INIT=1

	# visual feedback
	_LED_INPUT_SHAPER_END

	# show documentation link
	_LEARN_MORE_CALIBRATION

	# show the last generated graphs
	SHOW_IS_GRAPH_FILES TITLE="Belt Tension Graph"


[gcode_shell_command generate_tension_graphs]
command: /home/pi/printer_data/config/RatOS/scripts/idex-generate-belt-tension-graph.sh
timeout: 120.
verbose: True
