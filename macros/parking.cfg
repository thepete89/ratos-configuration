# WARNING: DO NOT EDIT THIS FILE
# To override settings from this file, you can copy and paste the relevant
# sections into your printer.cfg and change it there.

#####
# CONFIGURATION VARIABLES
#####

[gcode_macro RatOS]
variable_start_print_park_in: "back"     # back|front|center = gantry parking position before the print starts
variable_start_print_park_z_height: 50   # float = toolhead parking z-position before the print starts
variable_end_print_park_in: "back"       # back|front|center = gantry parking position after the print has finished
variable_pause_print_park_in: "back"     # back|front|center = gantry parking position if the print has paused
variable_end_print_park_z_hop: 20        # float = toolhead z-hop after the print has finished


[gcode_macro _START_PRINT_PARK]
gcode:
	# park IDEX toolhead if needed
	{% if printer["dual_carriage"] is defined and not (printer.configfile.settings.beacon is defined and beacon_contact_z_calibration) %}
		# IDEX
		{% if printer["gcode_macro RatOS"].start_print_park_x is defined and printer["gcode_macro RatOS"].start_print_park_x != '' %}
			RATOS_ECHO PREFIX="WARNING" MSG="start_print_park_x is ignored for IDEX printers"
		{% endif %}
		PARK_TOOLHEAD
		G90
	{% endif %}

	# park
	{% set z = printer["gcode_macro RatOS"].start_print_park_z_height|float %}
	{% set z_speed = printer["gcode_macro RatOS"].macro_z_speed|float * 60 %}
	_PARK LOCATION={printer["gcode_macro RatOS"].start_print_park_in} X={printer["gcode_macro RatOS"].start_print_park_x} 
	G0 Z{z} F{z_speed}


[gcode_macro _END_PRINT_PARK]
gcode:
	{% if printer["dual_carriage"] is defined %}
		# IDEX
		{% if printer["gcode_macro RatOS"].end_print_park_x is defined and printer["gcode_macro RatOS"].end_print_park_x != '' %}
			RATOS_ECHO PREFIX="WARNING" MSG="end_print_park_x is ignored for IDEX printers"
		{% endif %}
		{% set default_toolhead = printer["gcode_macro RatOS"].default_toolhead|default(0)|int %}
		{% set parking_position = printer["gcode_macro T%s" % default_toolhead].parking_position|float %}
		_IDEX_SINGLE X={parking_position}
		PARK_TOOLHEAD
		G90
	{% endif %}
	_PARK LOCATION={printer["gcode_macro RatOS"].end_print_park_in} X={printer["gcode_macro RatOS"].end_print_park_x}

[gcode_macro _PARK]
gcode:
	# config
	{% set printable_x_max = printer["gcode_macro RatOS"].printable_x_max|float %}
	{% set printable_y_max = printer["gcode_macro RatOS"].printable_y_max|float %}
	{% set speed = printer["gcode_macro RatOS"].macro_travel_speed|float * 60 %}

	# Handle toolhead settings
	CACHE_TOOLHEAD_SETTINGS KEY="park"
	SET_MACRO_TRAVEL_SETTINGS

	# Get X position
	{% if params.X != '' %}
		{% if params.X|float >= printer.toolhead.axis_minimum.x + 5 and params.X|float <= printable_x_max - 5 %}
			{% set safe_x = params.X|float %}
		{% else %}
			{action_respond_info('The requested X co-ordinate is outside the defined axis bounds - using defaults')}
			{% set safe_x = printable_x_max / 2 %}
		{% endif %}
	{% else %}
		{% set safe_x = printable_x_max / 2 %}
	{% endif %}
	# Get Y position
	{% if params.LOCATION|default('back')|lower == 'back' %}
		{% set y = printable_y_max - 15 %}
	{% elif params.LOCATION|lower == 'front' %}
		{% set y = printer.toolhead.axis_minimum.y + 5 %}
	{% elif params.LOCATION|lower == 'center' %}
		{% set y = printable_y_max / 2 %}
	{% endif %}

	# Absolute positioning
	G90 
	{% if printer["dual_carriage"] is not defined %}
		# DEFAULT
		G0 X{safe_x} Y{y} F{speed} 
	{% else %}
    	# IDEX
		G0 Y{y} F{speed} 
	{% endif %}

	# Handle toolhead settings
	RESTORE_TOOLHEAD_SETTINGS KEY="park"
